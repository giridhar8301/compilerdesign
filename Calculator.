Lex File:
%option noyywrap
%{
#include<stdio.h>
#include"y.tab.h"
void yyerror(char *s);
extern int yylval;
%}
digit [0-9]
%%
{digit}+ {yylval=atoi(yytext);return NUM;}
[a-z] {yylval=toascii(*yytext)-97;return ID;}
[A-Z] {yylval=toascii(*yytext)-65;return ID;}
[-+*/=\n] {return *yytext;}
\( {return *yytext;}
\) {return *yytext;}
. {yyerror("syntax error");}
%%
Calculator.yacc
%{
#include<stdio.h>
void yyerror(char*);
extern int yylex(void);
int val[26];
%}
%token NUM ID
%%
S:
S E '\n' {printf("%d\n",$2);}
| S ID '=' E '\n' {val[$2]=$4;}
|
;
E:
E '+' T {$$=$1+$3;}
|E '-' T {$$=$1-$3;}
|T {$$=$1;}
T:
T '*' F {$$=$1*$3;}
|T '/' F {$$=$1/$3;}
|F {$$=$1;}
F:
'(' E ')' {$$=$2;}
|NUM {$$=$1;}
|ID {$$=val[$1];}
%%
void yyerror(char *s)
{
printf("%s",s);
}
int main()
{
yyparse();
return 0;
}
